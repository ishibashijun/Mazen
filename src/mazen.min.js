/**
 * Name: Mazen
 * Description: Javascript maze dungeon generator library.
 * Copyright (c) 2015 Jun Ishibashi
 * Version: 1.0.1
 * Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
 */ 

(function(d,l){d.Obj=function(){this.init.apply(this,arguments)};d.Obj.prototype={init:function(){this.keys=[];this.values=[];this.keyIndex={};this.length=0},dispose:function(){for(var a=0;a<this.length;a++)delete this.keyIndex[this.keys[a]],delete this.keys[a],delete this.values[a];delete this.keys;delete this.values;delete this.keyIndex;delete this.length},hasKey:function(a){return"undefined"!=typeof this.keyIndex[a]},set:function(a,b){this.hasKey(a)?this.values[this.keyIndex[a]]=b:(this.keys.push(a),
this.values.push(b),this.keyIndex[a]=this.length,this.length++)},get:function(a){return this.hasKey(a)?this.values[this.keyIndex[a]]:l},remove:function(a){if(this.hasKey(a)){var b=this.keyIndex[a];this.keys.splice(b,1);this.values.splice(b,1);delete this.keyIndex[a];for(a=this.keys.length;b<a;b++)"undefined"!=this.keyIndex[this.keys[b]]&&this.keyIndex[this.keys[b]]--;this.length--}},combine:function(a){for(var b=a.length,c=0;c<b;c++){var e=a.keys[c];this.hasKey(e)||this.set(e,a.get(e))}},combineBoth:function(a){for(var b=
this.length,c=a.length,e=0;e<b;e++){var f=this.keys[e];a.hasKey(f)||a.set(f,this.values[e])}for(b=0;b<c;b++)f=a.keys[b],this.hasKey(f)||this.set(f,a.values[b])},forEach:function(a){for(var b=this.length,c=0;c<b&&a(this.values[c],this.keys[c],this);c++);},toString:function(){for(var a="{",b=this.length,c=0;c<b;c++)a+="[index: "+c+", key: "+this.keys[c],a+=", keyIndex: "+this.keyIndex[this.keys[c]]+", value: "+typeof this.values[c]+"]",a+="\n";return a+"}"}};d.MathUtils={random:function(a,b){return b==
l?Math.random()*a:Math.random()*(b-a)+a},randomInt:function(a,b){return b==l?Math.round(Math.random()*a):Math.round(Math.random()*(b-a)+a)},randomOddInt:function(a,b){var c=this.randomInt(a,b);0===c%2&&(Math.round(Math.random())?c+1<=b?c++:c--:a<=c-1?c--:c++);return c},randomEvenInt:function(a,b){var c=this.randomInt(a,b);0!=c%2&&(Math.round(Math.random())?c+1<=b?c++:c--:a<=c-1?c--:c++);return c}};d.ArrayUtils={copy:function(a,b){if(b.length<a.length)throw Error("Destination array length must be greater than or equals to source array.");
for(var c=a.length,e=0;e<c;e++)b[e]=a[e]},shuffle:function(a){for(var b=a.length,c=b-1;0<b;){var e=MathUtils.randomInt(c),f=a[e];a[e]=a[0];a[0]=f;b--}},containsId:function(a,b){for(var c=a.length,e=0;e<c;e++)if(a[e].id===b.id)return!0;return!1},uniquePushId:function(a,b){for(var c=!1,e=a.length,f=0;f<e;f++)if(a[f].id===b.id){c=!0;break}c||a.push(b)},uniqueConcatId:function(a,b){if(0!==b.length)for(var c=b.length,e=a.length,f,k=0;k<c;k++){f=!1;for(var h=0;h<e;h++)if(a[h].id===b[k].id){f=!0;break}f||
a.push(b[k])}},removeCell:function(a,b){for(var c=a.length,e=0;e<c;e++)if(a[e].equals(b)){a.splice(e,1);break}},uniqueConcatCell:function(a,b){if(0!==b.length)for(var c=b.length,e=a.length,f,k=0;k<c;k++){f=!1;for(var h=0;h<e;h++)if(a[h].equals(b[k])){f=!0;break}f||a.push(b[k])}},uniqueConcatCellData:function(a,b){if(0!==b.length)for(var c=b.length,e=a.length,f,k=0;k<c;k++){f=!1;for(var h=0;h<e;h++)if(a[h].dstCell.equals(b[k].dstCell)){f=!0;break}f||a.push(b[k])}}};d.pos2key=function(a,b){return a.toString()+
"x"+b.toString()};d.key2pos=function(a){a=a.split("x");return{x:parseInt(a[0]),y:parseInt(a[1])}};d.checkRange=function(a,b,c,e){if(a<c||b<e)throw a="The map size is [width: "+a+", height: "+b+"]"+(", the coordinate it is given was [x: "+c+", y: "+e+"]"),new RangeError(a);};d.Terrain={NOTHING:1,WALL:2,ROOM:4,CORRIDOR:8,ENTRANCE:16,DESCENDING_STAIR:32,ASCENDING_STAIR:64};d.Direction={CROSS:[{x:0,y:-1},{x:0,y:1},{x:1,y:0},{x:-1,y:0}],NORTH:{x:0,y:-1},SOUTH:{x:0,y:1},EAST:{x:1,y:0},WEST:{x:-1,y:0},CROSS2:[{x:0,
y:-2},{x:0,y:2},{x:2,y:0},{x:-2,y:0}],NORTH2:{x:0,y:-2},SOUTH2:{x:0,y:2},EAST2:{x:2,y:0},WEST2:{x:-2,y:0},BOX:[{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:-1,y:0},{x:0,y:0},{x:1,y:0},{x:-1,y:1},{x:0,y:1},{x:1,y:1}]};d.Cell=function(a,b){this.x=a;this.y=b;this.connectedCells=new Obj;this.deadEnd=!1;return this};d.Cell.prototype={getCellKeys:function(){var a=[];this.connectedCells.forEach(function(b,c,e){a.push(c);return!0});return a},getCell:function(a,b){var c=pos2key(a,b);return this.connectedCells.get(c)},
setCell:function(a){var b=pos2key(a.x,a.y);this.connectedCells.set(b,a)},deleteCellAt:function(a,b){var c=pos2key(a,b);this.connectedCells.remove(c)},deleteCell:function(a){this.deleteCellAt(a.x,a.y)},cellLength:function(){return this.connectedCells.length},clone:function(){return new Cell(this.x,this.y)},equals:function(a,b){return a instanceof Object?this.x===a.x&&this.y===a.y:this.x===a&&this.y===b},add:function(a,b){a instanceof Object?(this.x+=a.x,this.y+=a.y):1===arguments.length?(this.x+=a,
this.y+=a):(this.x+=a,this.y+=b);return this},sub:function(a,b){a instanceof Object?(this.x-=a.x,this.y-=a.y):1===arguments.length?(this.x-=a,this.y-=a):(this.x-=a,this.y-=b);return this},mul:function(a,b){a instanceof Object?(this.x*=a.x,this.y*=a.y):1===arguments.length?(this.x*=a,this.y*=a):(this.x*=a,this.y*=b);return this},div:function(a,b){a instanceof Object?0!==a.x&&0!==a.y&&(this.x/=a.x,this.y/=a.y):1===arguments.length?0!==a&&(this.x/=a,this.y/=a):0!==a.x&&0!==a.y&&(this.x/=a,this.y/=b);
return this},toString:function(){return"[x: "+this.x+", y: "+this.y+"]"}};d.BaseConnector=function(a,b){d.Cell.call(this,a,b);this.connectedRooms=new Obj;this.connectedEntrances=new Obj;this.connectedCorridors=new Obj};d.BaseConnector.prototype=Object.create(d.Cell.prototype);d.BaseConnector.prototype.constructor=d.BaseConnector;d.BaseConnector.prototype.isEntranceConnected=function(a){return this.connectedEntrances.hasKey(a.id.toString())};d.BaseConnector.prototype.isCorridorConnected=function(a){return this.connectedCorridors.hasKey(a.id.toString())};
d.BaseConnector.prototype.isRoomConnected=function(a){return this.connectedRooms.hasKey(a.id.toString())};d.BaseConnector.prototype.getRoomKeys=function(){var a=[];this.connectedRooms.forEach(function(b,c,e){a.push(c);return!0});return a};d.BaseConnector.prototype.getRoom=function(a){return this.connectedRooms.get(a.toString())};d.BaseConnector.prototype.setRoom=function(a){this.connectedRooms.set(a.id.toString(),a)};d.BaseConnector.prototype.deleteRoom=function(a){this.connectedRooms.remove(a.toString())};
d.BaseConnector.prototype.roomLength=function(){return this.connectedRooms.length};d.BaseConnector.prototype.getCorridorKeys=function(){var a=[];this.connectedCorridors.forEach(function(b,c,e){a.push(c);return!0});return a};d.BaseConnector.prototype.getCorridor=function(a){return this.connectedCorridors.get(a.toString())};d.BaseConnector.prototype.setCorridor=function(a){this.connectedCorridors.set(a.id.toString(),a)};d.BaseConnector.prototype.deleteCorridor=function(a){this.connectedCorridors.remove(a.toString())};
d.BaseConnector.prototype.corridorLength=function(){return this.connectedCorridors.length};d.BaseConnector.prototype.getEntranceKeys=function(){var a=[];this.connectedEntrances.forEach(function(b,c,e){a.push(c);return!0});return a};d.BaseConnector.prototype.getEntrance=function(a){return this.connectedEntrances.get(a.toString())};d.BaseConnector.prototype.setEntrance=function(a){this.connectedEntrances.set(a.id.toString(),a)};d.BaseConnector.prototype.deleteEntrance=function(a){this.connectedEntrances.remove(a.toString())};
d.BaseConnector.prototype.entranceLength=function(){return this.connectedEntrances.length};d.CellContainer=function(a,b){d.BaseConnector.call(this,a,b);this.cells=new Obj};d.CellContainer.prototype=Object.create(d.BaseConnector.prototype);d.CellContainer.prototype.constructor=d.CellContainer;d.CellContainer.prototype.contains=function(a){a=pos2key(a.x,a.y);return this.cells.hasKey(a)};d.CellContainer.prototype.getCellKeys=function(){var a=[];this.cells.forEach(function(b,c,e){a.push(c);return!0});
return a};d.CellContainer.prototype.getCell=function(a,b){var c=pos2key(a,b);return this.cells.get(c)};d.CellContainer.prototype.setCell=function(a){var b=pos2key(a.x,a.y);this.cells.set(b,a)};d.CellContainer.prototype.deleteCellAt=function(a,b){var c=pos2key(a,b);this.cells.remove(c)};d.CellContainer.prototype.deleteCell=function(a){this.deleteCellAt(a.x,a.y)};d.CellContainer.prototype.cellLength=function(){return this.cells.length};d.Room=function(a,b,c,e,f){d.CellContainer.call(this,b,c);this.id=
a;this.width=e;this.height=f;this.north=[];this.south=[];this.east=[];this.west=[];this.isEntranceOnWest=this.isEntranceOnEast=this.isEntranceOnSouth=this.isEntranceOnNorth=!1;this.center=new Cell(b+Math.ceil(.5*e),c+Math.ceil(.5*f));this.combinedRooms=new Obj;this.roomGroup=l};d.Room.prototype=Object.create(d.CellContainer.prototype);d.Room.prototype.constructor=d.Room;d.Room.prototype.overlaps=function(a){var b=this.x-1,c=this.y-1,e=this.x+this.width+1,f=this.y+this.height+1,k=a.x+a.width,h=a.y+
a.height;return b<=a.x&&a.x<e&&c<h&&h<=f||b<=a.x&&a.x<e&&c<=a.y&&a.y<f||b<k&&k<=e&&c<=a.y&&a.y<f||b<k&&k<=e&&c<h&&h<=f||a.x<b&&e<k&&a.y<c&&f<h?!0:!1};d.Room.prototype.isRoomCombined=function(a){return this.combinedRooms.hasKey(a.id.toString())};d.Room.prototype.getCombinedRoomKeys=function(){var a=[];this.combinedRooms.forEach(function(b,c,e){a.push(c);return!0});return a};d.Room.prototype.getCombinedRoom=function(a){return this.combinedRooms.get(a.toString())};d.Room.prototype.setCombinedRoom=function(a){this.combinedRooms.set(a.id.toString(),
a)};d.Room.prototype.deleteCombinedRoom=function(a){this.combinedRooms.remove(a.id.toString())};d.Room.prototype.combinedRoomLength=function(){return this.combinedRooms.length};d.RoomGroup=function(){this.init.apply(this,arguments)};d.RoomGroup.prototype={init:function(a){this.id=a;this.rooms=new Obj;this.north=[];this.south=[];this.east=[];this.west=[];this.isEntranceOnWest=this.isEntranceOnEast=this.isEntranceOnSouth=this.isEntranceOnNorth=!1;this.connectedEntrances=new Obj;this.connectedCorridors=
new Obj},dispose:function(){delete this.id;this.rooms.dispose();for(var a in this.north)delete this.north[a];for(var b in this.south)delete this.south[b];for(var c in this.east)delete this.east[c];for(var e in this.west)delete this.west[e];delete this.north;delete this.south;delete this.east;delete this.west;delete this.isEntranceOnNorth;delete this.isEntranceOnSouth;delete this.isEntranceOnEast;delete this.isEntranceOnWest;this.connectedEntrances.dispose();this.connectedCorridors.dispose();delete this.connectedEntrances;
delete this.connectedCorridors},combine:function(a){var b=this;a.rooms.forEach(function(a,e,f){b.setRoom(a);return!0})},getRoomKeys:function(){var a=[];this.rooms.forEach(function(b,c,e){a.push(c);return!0});return a},setRoom:function(a){this.rooms.hasKey(a.id.toString())||(ArrayUtils.uniqueConcatCell(this.north,a.north),ArrayUtils.uniqueConcatCell(this.south,a.south),ArrayUtils.uniqueConcatCell(this.east,a.east),ArrayUtils.uniqueConcatCell(this.west,a.west),this.isEntranceOnNorth=!0===a.isEntranceOnNorth?
!0:this.isEntranceOnNorth,this.isEntranceOnSouth=!0===a.isEntranceOnSouth?!0:this.isEntranceOnSouth,this.isEntranceOnEast=!0===a.isEntranceOnEast?!0:this.isEntranceOnEast,this.isEntranceOnWest=!0===a.isEntranceOnWest?!0:this.isEntranceOnWest,a.roomGroup=this,this.rooms.forEach(function(b,c,e){b.isRoomCombined(a)||(b.setCombinedRoom(a),a.setCombinedRoom(b),b.connectedEntrances.combineBoth(a.connectedEntrances),b.connectedCorridors.combineBoth(a.connectedCorridors));return!0}),this.rooms.set(a.id.toString(),
a),this.connectedEntrances.combine(a.connectedEntrances),this.connectedCorridors.combine(a.connectedCorridors))},getRoom:function(a){return this.rooms.get(a.id.toString())},roomLength:function(){return this.rooms.length},getEntranceKeys:function(){var a=[];this.connectedEntrances.forEach(function(b,c,e){a.push(c);return!0});return a},setEntrance:function(a){this.connectedEntrances.hasKey(a.id.toString())||(this.rooms.forEach(function(b,c,e){b.setEntrance(a);return!0}),this.connectedEntrances.set(a.id.toString(),
a))},getEntrance:function(a){return this.connectedEntrances.get(a.toString())},getCorridorKeys:function(){var a=[];this.connectedCorridors.forEach(function(b,c,e){a.push(c)});return a},setCorridor:function(a){this.connectedCorridors.hasKey(a.id.toString())||(this.rooms.forEach(function(b,c,e){b.setCorridor(a);return!0}),this.connectedCorridors.set(a.id.toString(),a))},getCorridor:function(a){return this.connectedCorridors.get(a.toString())},corridorLength:function(){return this.connectedCorridors.length},
setEntranceOnNorth:function(){this.isEntranceOnNorth=!0;this.rooms.forEach(function(a,b,c){return a.isEntranceOnNorth=!0})},setEntranceOnSouth:function(){this.isEntranceOnSouth=!0;this.rooms.forEach(function(a,b,c){return a.isEntranceOnSouth=!0})},setEntranceOnEast:function(){this.isEntranceOnEast=!0;this.rooms.forEach(function(a,b,c){return a.isEntranceOnEast=!0})},setEntranceOnWest:function(){this.isEntranceOnWest=!0;this.rooms.forEach(function(a,b,c){return a.isEntranceOnWest=!0})}};d.Corridor=
function(a){d.CellContainer.call(this,0,0);this.id=a;this.corridorGroup=l;this.deadEnds=new Obj};d.Corridor.prototype=Object.create(d.CellContainer.prototype);d.Corridor.prototype.constructor=d.Corridor;d.Corridor.prototype.getDeadEndKeys=function(){var a=[];this.deadEnds.forEach(function(b,c,e){a.push(c);return!0});return a};d.Corridor.prototype.getDeadEnd=function(a,b){var c=pos2key(a,b);return this.deadEnds.get(c)};d.Corridor.prototype.setDeadEnd=function(a){var b=pos2key(a.x,a.y);this.deadEnds.set(b,
a)};d.Corridor.prototype.deleteDeadEndAt=function(a,b){var c=pos2key(a,b);this.deadEnds.remove(c)};d.Corridor.prototype.deleteDeadEnd=function(a){this.deleteDeadEndAt(a.x,a.y)};d.Corridor.prototype.deadEndLength=function(){return this.deadEnds.length};d.CorridorGroup=function(){this.init.apply(this,arguments)};d.CorridorGroup.prototype={init:function(a){this.id=a;this.corridors=new Obj;this.deadEnds=new Obj;this.connectedRooms=new Obj;this.connectedEntrances=new Obj},dispose:function(){delete this.id;
this.corridors.dispose();this.deadEnds.dispose();this.connectedRooms.dispose();this.connectedEntrances.dispose();delete this.corridors;delete this.deadEnds;delete this.connectedRooms;delete this.connectedEntrances},combine:function(a){var b=this;a.corridors.forEach(function(a,e,f){b.setCorridor(a);return!0})},isRoomConnected:function(a){return this.connectedRooms.hasKey(a.id.toString())},isEntranceConnected:function(a){return this.connectedEntrances.hasKey(a.id.toString())},isCorridorConnected:function(a){return this.corridors.hasKey(a.id.toString())},
setCorridor:function(a){this.corridors.hasKey(a.id.toString())||(a.corridorGroup=this,this.corridors.forEach(function(b,c,e){b.setCorridor(a);a.setCorridor(b);b.connectedCorridors.combineBoth(a.connectedCorridors);b.connectedRooms.combineBoth(a.connectedRooms);b.connectedEntrances.combineBoth(a.connectedEntrances);return!0}),this.corridors.set(a.id.toString(),a),this.deadEnds.combine(a.deadEnds),this.connectedRooms.combine(a.connectedRooms),this.connectedEntrances.combine(a.connectedEntrances))},
getCorridor:function(a){return this.corridors.get(a.toString())},setRoom:function(a){this.connectedRooms.hasKey(a.id.toString())||(this.corridors.forEach(function(b,c,e){b.setRoom(a);return!0}),this.connectedRooms.set(a.id.toString(),a))},getRoom:function(a){return this.connectedRooms.get(a.toString())},setEntrance:function(a){this.connectedEntrances.hasKey(a.id.toString())||(this.corridors.forEach(function(b,c,e){b.setEntrance(a);return!0}),this.connectedEntrances.set(a.id.toString(),a))},getEntrance:function(a){return this.connectedEntrances.get(a.toString())},
getDeadEndAt:function(a,b){var c=pos2key(a,b);return this.deadEnds.get(c)},getDeadEnd:function(a){return this.getDeadEndAt(a.x,a.y)},deleteDeadEndAt:function(a,b){var c=pos2key(a,b);this.deadEnds.hasKey(c)&&(this.deadEnds.remove(c),this.corridors.forEach(function(a,b,k){a.deadEnds.remove(c);return!0}))},deleteDeadEnd:function(a){this.deleteDeadEndAt(a.x,a.y)}};d.Entrance=function(a,b,c){d.BaseConnector.call(this,b,c);this.id=a};d.Entrance.prototype=Object.create(d.BaseConnector.prototype);d.Entrance.prototype.constructor=
d.Entrance;d.Stair=function(a,b,c,e){d.Cell.call(this,c,e);this.type=a;this.id=b;this.containedCorridor=this.containedRoom=l};d.Stair.prototype=Object.create(d.Cell.prototype);d.Stair.prototype.constructor=d.Stair;d.Stair.prototype.setRoom=function(a){this.containedRoom=a};d.Stair.prototype.getRoom=function(){return this.containedRoom};d.Stair.prototype.setCorridor=function(a){this.containedCorridor=a};d.Stair.prototype.getCorridor=function(){return this.containedCorridor};d.Wall=function(a,b,c){d.Cell.call(this,
b,c);this.id=a};d.Wall.prototype=Object.create(d.Cell.prototype);d.Wall.prototype.constructor=d.Wall;d.MapData=function(){this.init.apply(this,arguments)};d.MapData.prototype={init:function(a,b){this.type=a;this.id=b},toString:function(){return"[type: "+this.type+", id: "+this.id+"]"}};d.DungeonManager=function(){this.init.apply(this,arguments)};d.DungeonManager.prototype={init:function(a,b){this.stairId=this.wallId=this.corridorGroupId=this.corridorId=this.entranceId=this.roomGroupId=this.roomId=
0;this.map=Array(a*b);this.width=a;this.height=b;this.fill(Terrain.NOTHING,l)},reset:function(){this.stairId=this.wallId=this.corridorGroupId=this.corridorId=this.entranceId=this.roomGroupId=this.roomId=0;this.map=Array(this.width*this.height);this.fill(Terrain.NOTHING,l)},getRoomId:function(){return this.roomId++},getRoomGroupId:function(){return this.roomGroupId++},getEntranceId:function(){return this.entranceId++},getCorridorId:function(){return this.corridorId++},getCorridorGroupId:function(){return this.corridorGroupId++},
getWallId:function(){return this.wallId++},getStairId:function(){return this.stairId++},getMap:function(a,b){checkRange(this.width,this.height,a,b);return this.map[a+this.width*b]},setMap:function(a,b,c,e){checkRange(this.width,this.height,c,e);this.map[c+this.width*e].type=a;this.map[c+this.width*e].id=b},fill:function(a,b){for(var c=0;c<this.height;c++)for(var e=0;e<this.width;e++)this.map[e+this.width*c]=new MapData(a,b)},toString:function(){for(var a="",b=0;b<this.height;b++)for(var c=0;c<this.width;c++)a+=
this.map[c+this.width*b].toString()+"\n";return a}};d.CellData=function(){this.init.apply(this,arguments)};d.CellData.prototype={init:function(a,b,c){this.dir=a;this.srcCell=b;this.dstCell=c}};d.DungeonUtils={createRooms:function(a,b){if(!(a.parameters.roomCreationMaxTry<=b&&0!=a.roomLength())){var c,e=a.parameters.maxRooms,f=Math.sqrt(a.parameters.minRoomSize),k=Math.sqrt(a.parameters.maxRoomSize);for(c=0;c<e;c++){var h=MathUtils.randomOddInt(f,k),g=MathUtils.randomOddInt(f,k),d=MathUtils.randomOddInt(1,
a.width-h-1),q=MathUtils.randomOddInt(1,a.height-g-1),n=new Room(l,d,q,h,g),p=!1;0!==a.roomLength()&&a.rooms.forEach(function(a,b,c){return a.overlaps(n)?(p=!0,!1):!0});if(!p)if(a.roomLength()<a.parameters.maxRooms)n.id=a.getDungeonManager().getRoomId(),a.setRoom(n),this.createRoomMap(a,n),a.parameters.createExtraCombinedRooms||this.createRoomWallMap(a,n);else return}a.roomLength()<a.minRooms&&this.createRooms(a,b+1)}},createRoomMap:function(a,b){for(var c=b.x+b.width,e=b.y+b.height,f=b.y,k=e-1,h=
c-1,g=b.x,d=b.y;d<e;d++)for(var q=b.x;q<c;q++){var n=a.getCell(q,d);b.setCell(n);a.updateMap(Terrain.ROOM,b.id,q,d);d===f&&b.north.push(n);d===k&&b.south.push(n);q===h&&b.east.push(n);q===g&&b.west.push(n)}},createRoomWallMap:function(a,b){for(var c=b.x+b.width+1,e=b.y+b.height+1,f=b.x-1,k=c-1,d=b.y-1,g=e-1,m=b.y-1;m<e;m++)for(var q=b.x-1;q<c;q++)if(m===d||m===g||q===f||q===k){var n=new Wall(a.getDungeonManager().getWallId(),q,m);a.updateMap(Terrain.WALL,n.id,q,m);a.setWall(n)}},createExtraRoomsToCombine:function(a){var b=
Math.sqrt(a.parameters.minRoomSize),c=Math.sqrt(a.parameters.maxRoomSize),e=this;a.rooms.forEach(function(f,k,d){for(k=a.parameters.combinedRooms;0<k;){d=f.center.clone();var g=new Cell;d.x=0!=d.x%2?d.x+MathUtils.randomEvenInt(-c,c):d.x+MathUtils.randomOddInt(-c,c);d.y=0!=d.y%2?d.y+MathUtils.randomEvenInt(-c,c):d.y+MathUtils.randomOddInt(-c,c);g.x=MathUtils.randomOddInt(b,c);g.y=MathUtils.randomOddInt(b,c);g=new Room(l,d.x,d.y,g.x,g.y);if(e.isRoomLargeEnough(f,g)&&e.isRoomInBoundary(a,g)&&(g.id=a.getDungeonManager().getRoomId(),
d=f.roomGroup,d==l&&(d=new RoomGroup(a.getDungeonManager().getRoomGroupId()),d.setRoom(f),a.setRoomGroup(d)),d.setRoom(g),a.setRoom(g),g=e.createExtraRoomMap(a,f,g),0!=g.length))for(var m in g){var q=g[m];q.roomGroup!=l?(q=q.roomGroup,q.id!=d.id&&(d.combine(q),a.deleteRoomGroup(q.id),q.dispose())):d.setRoom(q)}k--}return!0});this.removeInRoomDirectionCells(a);this.createAllRoomWallMap(a)},isRoomLargeEnough:function(a,b){var c=a.x+a.width,e=a.y+a.height,f=b.x+b.width,d=b.x+b.height;return a.overlaps(b)&&
(b.x<a.x||c<f||b.y<a.y||e<d)?!0:!1},isRoomInBoundary:function(a,b){var c=a.width-1,e=a.height-1,f=b.x+b.width,d=b.y+b.height;return 1<=b.x&&f<c&&1<=b.y&&d<e?!0:!1},createExtraRoomMap:function(a,b,c){for(var e=c.x+c.width,f=c.y+c.height,d=c.y,h=f-1,g=e-1,m=c.x,q=[],n=c.y;n<f;n++)for(var p=c.x;p<e;p++){var r=l;a.getDungeonManager().getMap(p,n).id===b.id?(r=b.getCell(p,n),r==l&&(r=a.getCell(p,n))):a.getMap(p,n)===Terrain.ROOM?(r=a.getRoom(a.getDungeonManager().getMap(p,n).id),ArrayUtils.uniquePushId(q,
r),r=r.getCell(p,n),r==l&&(r=a.getCell(p,n))):(r=a.getCell(p,n),c.setCell(r),a.updateMap(Terrain.ROOM,c.id,p,n));n===d&&c.north.push(r);n===h&&c.south.push(r);p===g&&c.east.push(r);p===m&&c.west.push(r)}return q},removeInRoomDirectionCells:function(a){var b=this;a.rooms.forEach(function(c,e,f){0!=c.combinedRoomLength()&&(0!=c.north.length&&b.removeDirectionCells(a,c,c.north,Direction.NORTH),0!=c.south.length&&b.removeDirectionCells(a,c,c.south,Direction.SOUTH),0!=c.east.length&&b.removeDirectionCells(a,
c,c.east,Direction.EAST),0!=c.west.length&&b.removeDirectionCells(a,c,c.west,Direction.WEST));return!0})},removeDirectionCells:function(a,b,c,e){for(var f=0,d=c.length;f<d;){var h=c[f],g=h.clone().add(e);a.getMap(g.x,g.y)===Terrain.ROOM?(c.splice(f,1),b.roomGroup!=l&&(0===e.x&&-1===e.y?ArrayUtils.removeCell(b.roomGroup.north,h):0===e.x&&1===e.y?ArrayUtils.removeCell(b.roomGroup.south,h):1===e.x&&0===e.y?ArrayUtils.removeCell(b.roomGroup.east,h):-1===e.x&&0===e.y&&ArrayUtils.removeCell(b.roomGroup.west,
h)),d--):f++}},createAllRoomWallMap:function(a){a.rooms.forEach(function(b,c,e){b=[b.north,b.south,b.east,b.west];for(var f in b)if(c=b[f],0!=c.length)for(var d in c){e=c[d];for(var h in Direction.BOX){var g=e.clone().add(Direction.BOX[h]);if(a.getMap(g.x,g.y)===Terrain.NOTHING){var m=new Wall(a.getDungeonManager().getWallId(),g.x,g.y);a.updateMap(Terrain.WALL,m.id,g.x,g.y);a.setWall(m)}}}return!0})},createCorridors:function(a){for(var b=a.width-1,c=a.height-1,e=1;e<c;e+=2)for(var f=1;f<b;f+=2)if(a.getMap(f,
e)===Terrain.NOTHING){var d=new Corridor(a.getDungeonManager().getCorridorId()),h=a.getCell(f,e);d.setCell(h);a.setCorridor(d);this.startMaze(a,d,h)}},startMaze:function(a,b,c){var e=[],f=l,d=a.parameters.branchOut?a.parameters.corridorBranchOutRatio:-1,h=[Direction.NORTH2,Direction.SOUTH2,Direction.EAST2,Direction.WEST2];for(e.push(c);0<e.length;){var g=e[e.length-1],m=[];c=l;a.updateMap(Terrain.CORRIDOR,b.id,g.x,g.y);for(var q in h)this.canAdvanse(a,g,h[q])&&m.push(h[q]);0!=m.length?d<Math.random()?
(c=this.arrayContainsDirection(m,f)&&a.parameters.corridorCurveRatio<=Math.random()?f:m[MathUtils.randomInt(m.length-1)],m=(new Cell(.5*c.x,.5*c.y)).add(g),f=a.getCell(m.x,m.y),g.setCell(f),f.setCell(g),a.updateMap(Terrain.CORRIDOR,b.id,m.x,m.y),g=(new Cell(c.x,c.y)).add(g),g=a.getCell(g.x,g.y),f.setCell(g),g.setCell(f),e.push(g),b.setCell(f),b.setCell(g),f=c):(f=e.pop(),1>=f.cellLength()&&(f.deadEnd=!0,b.setDeadEnd(f)),f=l):(f=e.pop(),1>=f.cellLength()&&(f.deadEnd=!0,b.setDeadEnd(f)),f=l)}},arrayContainsDirection:function(a,
b){if(b==l)return!1;var c,e=a.length;for(c=0;c<e;c++)if(a[c].x===b.x&&a[c].y===b.y)return!0;return!1},canAdvanse:function(a,b,c){var e=b.x+c.x;b=b.y+c.y;return 0>e||a.width<=e||0>b||a.height<=b?!1:a.getMap(e,b)===Terrain.NOTHING?!0:!1},connectCorridors:function(a){var b=this;a.corridors.forEach(function(c,e,f){var d={},h=0;c.cells.forEach(function(e,f,q){e=b.getNeighbourCorridors(a,c,e);for(var n in e)f=e[n],d.hasOwnProperty(n)?d[n].cells=d[n].cells.concat(f.cells):(d[n]=f,h++);return!0});0<h&&(c.corridorGroup==
l&&(c.corridorGroup=new CorridorGroup(a.getDungeonManager().getCorridorGroupId()),c.corridorGroup.setCorridor(c),a.setCorridorGroup(c.corridorGroup)),b.updateCorridorGroup(a,c,d));return!0})},getNeighbourCorridors:function(a,b,c){var e={},f;for(f in Direction.CROSS2){var d=Direction.CROSS2[f].x,h=Direction.CROSS2[f].y,g=c.clone().add(Direction.CROSS2[f]);if(a.getMap(g.x,g.y)===Terrain.CORRIDOR){var m=l,q=l,n=a.getDungeonManager().getMap(g.x,g.y);n.id==b.id||b.isCorridorConnected(a.getCorridor(n.id))||
(m=a.getCorridor(n.id),q=m.getCell(g.x,g.y));m!=l&&(e.hasOwnProperty(m.id.toString())?e[m.id.toString()].cells.push(new CellData(new Cell(d,h),c,q)):e[m.id.toString()]={corridor:m,cells:[new CellData(new Cell(d,h),c,q)]})}}return e},updateCorridorGroup:function(a,b,c){for(var e in c){var f=c[e].corridor,d=c[e].cells;if(!b.corridorGroup.isCorridorConnected(f)){var h=MathUtils.randomInt(0,d.length-1),g=d[h].dir,m=d[h].dstCell,d=d[h].srcCell,g=d.clone().add(g.div(2)),h=a.getCell(g.x,g.y);b.setCell(h);
a.updateMap(Terrain.CORRIDOR,b.id,g.x,g.y);d.setCell(h);m.setCell(h);h.setCell(d);h.setCell(m);m.deadEnd&&1<m.cellLength()&&(f.deleteDeadEnd(m),f.corridorGroup!=l&&f.corridorGroup.deleteDeadEnd(m),m.deadEnd=!1);d.deadEnd&&1<d.cellLength()&&(b.deleteDeadEnd(d),b.corridorGroup.deleteDeadEnd(d),d.deadEnd=!1);f.corridorGroup!=l?(f=f.corridorGroup,a.deleteCorridorGroup(f.id),b.corridorGroup.combine(f),f.dispose()):b.corridorGroup.setCorridor(f)}}},createEntrance:function(a){var b=a.width-1,c=a.height-
1,e=this;a.corridors.forEach(function(d,k,h){d.cells.forEach(function(g,h,k){if(d.roomLength()===a.roomLength())return!1;for(var n in Direction.CROSS2)if(h=g.clone().add(Direction.CROSS2[n]),0<h.x&&h.x<b&&0<h.y&&h.y<c&&(k=a.getDungeonManager().getMap(h.x,h.y),k.type===Terrain.ROOM)){var p=a.getRoom(k.id);if(!d.isRoomConnected(p)&&(k=g.clone().add(.5*Direction.CROSS2[n].x,.5*Direction.CROSS2[n].y),e.isEntrancePossible(a,k))){n=new Entrance(a.getDungeonManager().getEntranceId(),k.x,k.y);var r=p.roomGroup==
l?p:p.roomGroup,u=d.corridorGroup==l?d:d.corridorGroup;n.setCorridor(d);n.setRoom(p);p.roomGroup==l?(p.setEntrance(n),p.setCorridor(d)):(p.roomGroup.setEntrance(n),p.roomGroup.setCorridor(d),p.roomGroup.rooms.forEach(function(a,b,c){u.setRoom(a);return!0}));e.whereIsEntrance(p,h);d.corridorGroup==l?(d.setEntrance(n),d.setRoom(p),g.deadEnd&&(g.deadEnd=!1,d.deleteDeadEnd(g))):(d.corridorGroup.setEntrance(n),d.corridorGroup.setRoom(p),d.corridorGroup.corridors.forEach(function(a,b,c){r.setCorridor(a);
return!0}),g.deadEnd&&(g.deadEnd=!1,d.corridorGroup.deleteDeadEnd(g)));p.roomGroup!=l&&p.roomGroup.rooms.forEach(function(a,b,c){u.setRoom(a);return!0});a.getMap(k.x,k.y)===Terrain.WALL&&(g=a.getDungeonManager().getMap(k.x,k.y),g.type===Terrain.WALL&&a.deleteWall(g.id));a.updateMap(Terrain.ENTRANCE,n.id,k.x,k.y);a.setEntrance(n);break}}return!0});return!0})},isEntrancePossible:function(a,b){var c=a.width-1,e=a.height-1,d;for(d in Direction.CROSS){var k=b.clone().add(Direction.CROSS[d]);if(0<k.x&&
k.x<c&&0<k.y&&k.y<e&&a.getMap(k.x,k.y)===Terrain.ENTRANCE)return!1}return!0},whereIsEntrance:function(a,b){for(var c=!1,e=[a.north,a.south,a.east,a.west],d=0;4>d;d++){for(var k in e[d])if(e[d][k].equals(b)){0===d?a.roomGroup!=l?a.roomGroup.setEntranceOnNorth():a.isEntranceOnNorth=!0:1===d?a.roomGroup!=l?a.roomGroup.setEntranceOnSouth():a.isEntranceOnSouth=!0:2===d?a.roomGroup!=l?a.roomGroup.setEntranceOnEast():a.isEntranceOnEast=!0:3===d&&(a.roomGroup!=l?a.roomGroup.setEntranceOnWest():a.isEntranceOnWest=
!0);c=!0;break}if(c)break}},checkRoomsConnectivity:function(a){var b=a.getRoomKeys(),c=b.length,b=a.getRoom(b[0]),e=[b],d=e[0].getCorridorKeys(),k=[];0!=b.roomLength()&&b.connectedRooms.forEach(function(a,b,c){e.push(a)});0!=b.combinedRoomLength()&&b.combinedRooms.forEach(function(a,b,c){e.push(a)});for(var h in d)k.push(a.getCorridor(d[h]));this.checkRecursively(a,e,k,[]);return c===e.length?!0:!1},checkRecursively:function(a,b,c,e){for(var d=c.length,k=0;k<d;k++){var h=c.shift();e.push(h);h.connectedRooms.forEach(function(a,
d,f){ArrayUtils.containsId(b,a)||(b.push(a),a.connectedCorridors.forEach(function(a,b,d){ArrayUtils.containsId(e,a)||ArrayUtils.uniquePushId(c,a);return!0}),a.connectedRooms.forEach(function(a,d,f){ArrayUtils.uniquePushId(b,a);a.connectedCorridors.forEach(function(a,b,d){ArrayUtils.containsId(e,a)||ArrayUtils.uniquePushId(c,a);return!0});return!0}),a.combinedRooms.forEach(function(a,d,f){ArrayUtils.uniquePushId(b,a);a.connectedCorridors.forEach(function(a,b,d){ArrayUtils.containsId(e,a)||ArrayUtils.uniquePushId(c,
a);return!0});return!0}));return!0})}0!=c.length&&this.checkRecursively(a,b,c,e)},connectRooms:function(a){var b=this;a.rooms.forEach(function(c,e,d){b.isThereARoom(a,c,c.north,new Cell(0,-2));b.isThereARoom(a,c,c.south,new Cell(0,2));b.isThereARoom(a,c,c.west,new Cell(-2,0));b.isThereARoom(a,c,c.east,new Cell(2,0));return!0})},isThereARoom:function(a,b,c,e){for(var d in c){var k=c[d].clone().add(e),h=c[d].clone().add(e.clone().div(2));if(0<k.x&&k.x<a.width&&0<k.y&&k.y<a.height&&a.getMap(k.x,k.y)===
Terrain.ROOM&&a.getMap(h.x,h.y)===Terrain.WALL){var g=a.getRoom(a.getDungeonManager().getMap(k.x,k.y).id);if((b.roomGroup==l||g.roomGroup==l||b.roomGroup.id!==g.roomGroup)&&g!=l){var k=new Entrance(a.getDungeonManager().getEntranceId(),h.x,h.y),m=a.getDungeonManager().getMap(h.x,h.y);a.deleteWall(m.id);a.updateMap(Terrain.ENTRANCE,k.id,h.x,h.y);a.setEntrance(k);b.setRoom(g);g.setRoom(b);b.roomGroup==l&&g.roomGroup==l?(b.connectedCorridors.combineBoth(g.connectedCorridors),b.connectedEntrances.combineBoth(g.connectedEntrances)):
b.roomGroup!=l?(g.connectedCorridors.forEach(function(a,c,d){b.roomGroup.setCorridor(a)}),g.connectedEntrances.forEach(function(a,c,d){b.roomGroup.setEntrance(a)}),b.roomGroup.connectedCorridors.forEach(function(a,b,c){g.setCorridor(a)}),b.roomGroup.connectedEntrances.forEach(function(a,b,c){g.setEntrance(a)})):g.roomGroup!=l?(b.connectedCorridors.forEach(function(a,b,c){g.roomGroup.setCorridor(a)}),b.connectedEntrances.forEach(function(a,b,c){g.roomGroup.setEntrance(a)}),g.roomGroup.connectedCorridors.forEach(function(a,
c,d){b.setCorridor(a)}),g.roomGroup.connectedEntrances.forEach(function(a,c,d){b.setEntrance(a)})):(h=g.roomGroup,b.roomGroup.combine(h),a.deleteRoomGroup(h.id),h.dispose());k.setRoom(b);k.setRoom(g)}}}},createExtraEntrance:function(a){var b=this;a.rooms.forEach(function(c,d,f){d=c.entranceLength();f=Math.round(Math.random()*a.parameters.maxExtraEntrances)+1;for(var k=l;d<f;){var h=f,k=c.roomGroup!=l?b.prioritizeEdges(c.roomGroup):b.prioritizeEdges(c),g;for(g in k){var m=k[g],q=!1,n=l,p=l,r=m.dir;
"north"===r?p=Direction.NORTH:"south"===r?p=Direction.SOUTH:"east"===r?p=Direction.EAST:"west"===r&&(p=Direction.WEST);for(var u in m.data){var t=m.data[u],n=t.clone().add(p);if(b.isExtraEntrancePossible(a,t,p)){m=new Entrance(a.getDungeonManager().getEntranceId(),n.x,n.y);t=t.clone().add(2*p.x,2*p.y);p=a.getDungeonManager().getMap(t.x,t.y);p=a.getCorridor(p.id);t=a.getCell(t.x,t.y);n=a.getDungeonManager().getMap(n.x,n.y);c.roomGroup!=l?(q=c.roomGroup,q.setEntrance(m),q.setCorridor(p),"north"===r?
c.roomGroup.setEntranceOnNorth():"south"===r?c.roomGroup.setEntranceOnSouth():"east"===r?c.roomGroup.setEntranceOnEast():"west"===r&&c.roomGroup.setEntranceOnWest()):(c.setEntrance(m),c.setCorridor(p),"north"===r?c.isEntranceOnNorth=!0:"south"===r?c.isEntranceOnSouth=!0:"east"===r?c.isEntranceOnEast=!0:"west"===r&&(c.isEntranceOnWest=!0));p.corridorGroup!=l?(r=p.corridorGroup,r.setEntrance(m),r.setRoom(c),t.deadEnd&&(t.deadEnd=!1,r.deleteDeadEnd(t))):(p.setEntrance(m),p.setRoom(c),t.deadEnd&&(t.deadEnd=
!1,p.deleteDeadEnd(t)));m.setRoom(c);m.setCorridor(p);a.deleteWall(n.id);a.updateMap(Terrain.ENTRANCE,m.id,m.x,m.y);a.setEntrance(m);f--;q=!0;break}}if(q)break}if(h===f)break}return!0})},isExtraEntrancePossible:function(a,b,c){var d=b.clone().add(2*c.x,2*c.y);return a.getMap(d.x,d.y)===Terrain.CORRIDOR?(b=b.clone().add(c),this.isEntrancePossible(a,b)):!1},prioritizeEdges:function(a){var b=[],c=[a.isEntranceOnNorth,a.isEntranceOnSouth,a.isEntranceOnEast,a.isEntranceOnWest],d=!1,f=Array(a.north.length),
k=Array(a.south.length),h=Array(a.east.length),g=Array(a.west.length);ArrayUtils.copy(a.north,f);ArrayUtils.copy(a.south,k);ArrayUtils.copy(a.east,h);ArrayUtils.copy(a.west,g);ArrayUtils.shuffle(f);ArrayUtils.shuffle(k);ArrayUtils.shuffle(h);ArrayUtils.shuffle(g);for(a=0;2>a;a++){for(var m=0===a?!1:!0,l=0;4>l;l++)c[l]===m&&(0===l?b.push({dir:"north",data:f}):1===l?b.push({dir:"south",data:k}):2===l?b.push({dir:"east",data:h}):3===l&&b.push({dir:"west",data:g}));0===a&&(0!=b.length?ArrayUtils.shuffle(b):
0===b.length&&(d=!0))}d&&ArrayUtils.shuffle(b);return b},createStairs:function(a){var b=[];a.parameters.createStairsAtDeadEnd?a.corridors.forEach(function(a,c,d){a.deadEnds.forEach(function(c,d,e){b.push({id:a.id,data:c});return!0});return!0}):a.rooms.forEach(function(a,c,d){a.cells.forEach(function(c,d,e){b.push({id:a.id,data:c});return!0});return!0});for(var c=MathUtils.randomInt(0,b.length-1),d=MathUtils.randomInt(0,b.length-1),f=b[c].id,k=b[d].id;f===k;)d=MathUtils.randomInt(0,b.length-1),k=b[d].id;
var c=b[c].data,h=new Stair(Terrain.DESCENDING_STAIR,a.getDungeonManager().getStairId(),c.x,c.y),d=b[d].data,g=new Stair(Terrain.ASCENDING_STAIR,a.getDungeonManager().getStairId(),d.x,d.y);a.parameters.createStairsAtDeadEnd?(f=a.getCorridor(f),k=a.getCorridor(k),h.setCorridor(f),g.setCorridor(k),f.corridorGroup!=l?f.corridorGroup.deleteDeadEnd(c):f.deleteDeadEnd(c),k.corridorGroup!=l?k.corridorGroup.deleteDeadEnd(d):k.deleteDeadEnd(d)):(h.setRoom(a.getRoom(f)),g.setRoom(a.getRoom(k)));a.updateMap(Terrain.DESCENDING_STAIR,
h.id,h.x,h.y);a.updateMap(Terrain.ASCENDING_STAIR,g.id,g.x,g.y)},removeDeadEnd:function(a){for(var b=a.getCorridorKeys(),c=b.length,d=0;d<c;d++)for(var f=a.getCorridor(b[d]),k=f.deadEndLength(),h=f.getDeadEndKeys(),g=0;g<k;g++){var l=f.deadEnds.get(h[g]);Math.random()<a.parameters.removeDeadEndRatio&&this.deleteDeadEnd(a,l)}},deleteDeadEnd:function(a,b){if(!(1<b.cellLength())){var c=l,d=b.getCellKeys(),d=b.connectedCells.get(d[0]);a.corridors.forEach(function(a,d,e){return a.contains(b)?(c=a,!1):
!0});c.corridorGroup!=l?c.corridorGroup.deleteDeadEnd(b):c.deleteDeadEnd(b);c.deleteCell(b);d.deleteCell(b);a.updateMap(Terrain.NOTHING,l,b.x,b.y);!this.isEntranceAround(a,d)&&2>d.cellLength()&&this.deleteDeadEnd(a,d)}},isEntranceAround:function(a,b){for(var c in Direction.CROSS){var d=b.clone().add(Direction.CROSS[c]);if(a.getMap(d.x,d.y)===Terrain.ENTRANCE)return!0}return!1},createCorridorWallMap:function(a){a.corridors.forEach(function(b,c,d){b.cells.forEach(function(b,c,d){for(var e in Direction.BOX)c=
b.clone().add(Direction.BOX[e]),a.getMap(c.x,c.y)===Terrain.NOTHING&&(d=new Wall(a.getDungeonManager().getWallId(),c.x,c.y),a.updateMap(Terrain.WALL,d.id,c.x,c.y),a.setWall(d));return!0});return!0})}};var v=function(){this.init.apply(this,arguments)};v.prototype={init:function(a,b,c){if(0===a%2||0===b%2)throw Error("The edges of dungeon must be odd size.");this.version="1.0.1";this.width=a;this.height=b;this.map=[];this.cells=[];this.walls=this.stairs=this.entrances=this.corridorGroups=this.corridors=
this.roomGroups=this.rooms=l;this.dungeonManager=new DungeonManager(a,b);this.parameters={generationMaxTry:5,roomCreationMaxTry:5,minRooms:8,maxRooms:25,combinedRooms:6,minRoomSize:40,maxRoomSize:100,createExtraCombinedRooms:!0,createStairsAtDeadEnd:!1,createExtraEntrance:!0,removeDeadEnd:!0,branchOut:!1,maxExtraEntrances:3,removeDeadEndRatio:.85,corridorCurveRatio:.4,corridorBranchOutRatio:.4};if(c!=l)for(var d in c)this.parameters.hasOwnProperty(d)&&(this.parameters[d]=c[d]);for(c=0;c<b;c++)for(d=
0;d<a;d++)this.cells[d+a*c]=new Cell(d,c)},generate:function(a){if(a!=l&&this.parameters.generationMaxTry<=a)return!1;this.map=Array(this.width*this.height);this.cells=Array(this.width*this.height);this.rooms=new Obj;this.roomGroups=new Obj;this.corridors=new Obj;this.corridorGroups=new Obj;this.entrances=new Obj;this.stairs=new Obj;this.walls=new Obj;this.fill(Terrain.NOTHING);this.dungeonManager.reset();for(var b=0;b<this.height;b++)for(var c=0;c<this.width;c++)this.cells[c+this.width*b]=new Cell(c,
b);DungeonUtils.createRooms(this,0);this.parameters.createExtraCombinedRooms&&DungeonUtils.createExtraRoomsToCombine(this);DungeonUtils.createCorridors(this);this.parameters.branchOut&&DungeonUtils.connectCorridors(this);DungeonUtils.createEntrance(this);DungeonUtils.checkRoomsConnectivity(this)||(DungeonUtils.connectRooms(this),DungeonUtils.checkRoomsConnectivity(this)||this.generate(a!=l?a+1:1));this.parameters.createExtraEntrance&&DungeonUtils.createExtraEntrance(this);DungeonUtils.createStairs(this);
this.parameters.removeDeadEnd&&DungeonUtils.removeDeadEnd(this);DungeonUtils.createCorridorWallMap(this);return!0},getMap:function(a,b){checkRange(this.width,this.height,a,b);return this.map[a+this.width*b]},setMap:function(a,b,c){checkRange(this.width,this.height,b,c);this.map[b+this.width*c]=a},getMapData:function(a,b){checkRange(this.width,this.height,a,b);return this.dungeonManager.getMap(a,b)},setMapData:function(a,b,c,d){checkRange(this.width,this.height,c,d);this.dungeonManager.setMap(a,b,
c,d)},updateMap:function(a,b,c,d){checkRange(this.width,this.height,c,d);this.setMap(a,c,d);this.setMapData(a,b,c,d)},getDungeonManager:function(){return this.dungeonManager},getCell:function(a,b){return this.cells[a+this.width*b]},getRoomKeys:function(){var a=[];this.rooms.forEach(function(b,c,d){a.push(c);return!0});return a},getRoom:function(a){return this.rooms.get(a.toString())},setRoom:function(a){this.rooms.set(a.id.toString(),a)},deleteRoom:function(a){this.rooms.remove(a.toString())},roomLength:function(){return this.rooms.length},
getRoomGroupKeys:function(){var a=[];this.roomGroups.forEach(function(b,c,d){a.push(c);return!0});return a},getRoomGroup:function(a){return this.roomGroups.get(a.toString())},setRoomGroup:function(a){this.roomGroups.set(a.id.toString(),a)},deleteRoomGroup:function(a){this.roomGroups.remove(a.toString())},roomGroupLength:function(){return this.roomGroups.length},getCorridorKeys:function(){var a=[];this.corridors.forEach(function(b,c,d){a.push(c);return!0});return a},getCorridor:function(a){return this.corridors.get(a.toString())},
setCorridor:function(a){this.corridors.set(a.id.toString(),a)},deleteCorridor:function(a){this.corridors.remove(a.toString())},corridorLength:function(){return this.corridors.length},getCorridorGroupKeys:function(){var a=[];this.corridorGroups.forEach(function(b,c,d){a.push(c);return!0});return a},getCorridorGroup:function(a){return this.corridorGroups.get(a.toString())},setCorridorGroup:function(a){this.corridorGroups.set(a.id.toString(),a)},deleteCorridorGroup:function(a){this.corridorGroups.remove(a.toString())},
corridorGroupLength:function(){return this.corridorGroups.length},getEntranceKeys:function(){var a=[];this.entrances.forEach(function(b,c,d){a.push(c);return!0});return a},getEntrance:function(a){return this.entrances.get(a.toString())},setEntrance:function(a){this.entrances.set(a.id.toString(),a)},deleteEntrance:function(a){this.entrances.remove(a.toString())},entranceLength:function(){return this.entrances.length},getWallKeys:function(){var a=[];this.walls.forEach(function(b,c,d){a.push(c);return!0});
return a},getWall:function(a){return this.walls.get(a.toString())},setWall:function(a){this.walls.set(a.id.toString(),a)},deleteWall:function(a){this.walls.remove(a.toString())},wallLength:function(){return this.walls.length},fill:function(a){var b,c;for(c=0;c<this.height;c++)for(b=0;b<this.width;b++)this.setMap(a,b,c)}};d.Mazen=v})(window);
